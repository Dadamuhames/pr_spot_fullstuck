"""
Django settings for pr_spot project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# env
env = environ.Env()
env.read_env(str(BASE_DIR / ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')


SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', 'rest_framework',
    'main', 'corsheaders', 'easy_thumbnails',
    'admins', "django_filters", 'social_django',
    'rest_social_auth', # for telegram auth
    'rest_framework_simplejwt.token_blacklist',
    'django_cleanup.apps.CleanupConfig', "account"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'pr_spot.middleware.LoginRequiredMiddleware'
]

ROOT_URLCONF = 'pr_spot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pr_spot.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
TEST_DOMEN = env.bool('TEST_DOMEN')


if TEST_DOMEN:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
            'CONN_MAX_AGE': 500
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': env('MYSQL_HOST'),
            'NAME': env('MYSQL_NAME'),
            'USER': env('MYSQL_USER'),
            'PASSWORD': env('MYSQL_PASS'),
            'PORT': '3306',
        }
    }

# mysql -u prspot -h prspot.mysql.pythonanywhere-services.com -p 'prspot$default'


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = env('STATIC_URL')
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, env("ADMIN_STATIC")),

]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = env('MEDIA_URL')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# thumbnails
THUMBNAIL_ALIASES = {
    '': {
        '400x400': {'size': (400, 400), 'crop': False},
        'ten': {'size': (200, 200), 'crop': False},
        '1100x1100': {'size': (1100, 1100), 'crop': False},
        'btn_img': {'size': (50, 50), 'crop': False},
        'avatar': {'size': (90, 90), 'crop': False},
        '1500x700': {'size': (1500, 700), 'crop': False},
        '900x900': {"size": (900, 900), "crop": False},
        '1500x1500': {"size": (1500, 1500), "crop": False}
    },
}


THUMBNAIL_PRESERVE_EXTENSIONS = ('webp')
THUMBNAIL_EXTENSION = 'webp'
THUMBNAIL_TRANSPARENCY_EXTENSION = 'webp'


LOGIN_REDIRECT_URL = '/admin/costumers'
LOGOUT_REDIRECT_URL = '/admin/login'


# custom user model 
AUTH_USER_MODEL = 'account.CustomUser'


# rest
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'social_core.backends.telegram.TelegramAuth',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DATE_INPUT_FORMATS': [("%Y.%m.%d"), ],
    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
    'PAGE_SIZE': 10,
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

# If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000", "https://cavsar.vercel.app"
]


CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Language'
]


# simple jwt
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=2),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False
}


SOCIAL_AUTH_TELEGRAM_BOT_TOKEN = b'6243365214:AAFwsSrN2tKPlxHNWxTfIHYmu4bfVoLKo2k'

APPEND_SLASH = True


CSRF_TRUSTED_ORIGINS = ['https://f9c5-31-148-160-196.ngrok-free.app']
